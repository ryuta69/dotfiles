[main]
timing = True
enable_pager = True
table_format = ascii
syntax_style = fruity
keyword_casing = auto
smart_completion = True
prompt = '\t \u@\h:\d> '
destructive_warning = True

[colors]
scrollbar = 'bg:#1f2430'
scrollbar.arrow = 'bg:#1f2430'
search = 'bg:#1f2430 #ff8f40'
search.current = '#ffffff bg:#44aa44'
selected = '#ffffff bg:#44aa44'
Token.Toolbar = 'bg:#222222 #aaaaaa'
Token.Toolbar.On = 'bg:#222222 #ffffff'
Token.Toolbar.Off = 'bg:#222222 #888888'
Token.SearchMatch = 'bg:#1f2430 #f0f0f0'
Token.SearchMatch.Current = 'bg:#1f2430 #ff8f40'
Token.Menu.Completions.Completion = 'bg:#1f2430 #f0f0f0'
Token.Menu.Completions.Completion.Current = 'bg:#1f2430 #ff8f40'

[favorite_queries]
addindex = '''ALTER TABLE `$1`
ADD INDEX `IDX_$1_$2` (`$2` ASC)'''

selectnthbiggest = '''SELECT *
FROM $1
WHERE $2 = (SELECT $2 FROM $1 GROUP BY $2 ORDER BY $2 DESC LIMIT $3 OFFSET 1)
'''

ifnull = '''select ifnull(
(select $1 from $2),
Null)
'''

rank = '''select
  $1,
  $2,
  dense_rank() over(partition by $1 order by $2 desc) as r
from $3
'''

maxgroup = '''select e1.id, e1.$2
from $1 as e1 left outer join $1 as e2
on e1.id = e2.id AND e1.$2 < e2.$2
where e2.$2 is NULL
'''

topingroup = '''select e.id, e.$2
from $1 as t
where (
  select count(distinct $2)
    from $1 as t2
    where t2.id = t.id AND t2.$2 >= t.$2) <= $3
'''

rownumber = '''select
  $1,
  $2,
  row_number() over(partition by $1 order by $2 desc) as rn
FROM $3
'''

cumulativesum = '''select
  $1,
  $2,
  sum($2) over(partition by $2 order by $1 desc) as csum
from $3
'''

cumulativesum2 = '''
select
  $1,
  (@csum := @csum + 1) as csum
from $2
inner join (select @csum:=0) as t
'''

countwithcondition = '''
select sum(
        case
      when a.$1 + 1 = b.$1 then 1
            else 0
        end
       ) as cnt
from $2 as a inner join $2 as b
on a.id = b.id
'''

median = '''
select id as median
from (
        select id,
               $1,
               sum($1) over (order by id) as csum,
               sum($1) over () as total
               from $2
) s
where s.total / 2.0 between s.csum - s.$1 and s.csum
'''

groupconsecutive = '''
select id
from (
  select d.*,
         count(d.id) over (partition by d.grp) as cnt
  from (
    select id
           id - row_number() over (order by id) as grp
    from $1
    where $2
  ) d
) a
where a.cnt >= 3
'''

changevertical='''
select min($3),
       min($4),
       min($5)
from   (
 select
  case
   when field = '$3' then @am:=@am+1
   when field = '$4' then @as:=@as+1
   when field = '$5' then @eu:=@eu+1
  end as rowline,
  case
   when field = '$3' then $2
   else null
  end as $3,
  case
   when field = '$4' then $2
   else null
  end as $4,
  case
   when field = '$5' then $2
   else null
  end as $5
 from $1
 inner join (select @am:=0, @as := 0, @eu:=0) hoge
 order by $2
) hoge
group by rowline
'''

nthingroup='''
select o1.id,
       o1.$2
from $1 as o1 inner join $1 as o2
on o1.id = o2.id and o1.$2 >= o2.$2
group by o1.id, o1.$2
having count(*) = $3
'''

groupcumulativesum=''' select
    id,
    if (sth!=@prev+1, @flag:=@flag+1, @flag) as flag,
    sth,
    @prev:=sth
from $1
inner join (select @prev:=0, @flag:=0) as h
'''

recursive='''with recursive cte as (
 select id,
        1 as lvl
 from $1
 union all
 select e.id,
        cte.lvl+1 as lvl
 from cte
 inner join $1 e
 on cte.id = e.id
)
'''

consecutiveseq='''with recursive seq as (
    select 0 as value
    union all
    select value+1
    from seq
    where value<100
)
select * from seq
'''
